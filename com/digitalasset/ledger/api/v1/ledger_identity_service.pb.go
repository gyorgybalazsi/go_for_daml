// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/digitalasset/ledger/api/v1/ledger_identity_service.proto

package com_digitalasset_ledger_api_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLedgerIdentityRequest struct {
	// Server side tracing will be registered as a child of the submitted context.
	// This field is a future extension point and is currently not supported.
	// Optional
	TraceContext         *TraceContext `protobuf:"bytes,1000,opt,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetLedgerIdentityRequest) Reset()         { *m = GetLedgerIdentityRequest{} }
func (m *GetLedgerIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*GetLedgerIdentityRequest) ProtoMessage()    {}
func (*GetLedgerIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcfb95216f8da1e3, []int{0}
}

func (m *GetLedgerIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLedgerIdentityRequest.Unmarshal(m, b)
}
func (m *GetLedgerIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLedgerIdentityRequest.Marshal(b, m, deterministic)
}
func (m *GetLedgerIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLedgerIdentityRequest.Merge(m, src)
}
func (m *GetLedgerIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_GetLedgerIdentityRequest.Size(m)
}
func (m *GetLedgerIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLedgerIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLedgerIdentityRequest proto.InternalMessageInfo

func (m *GetLedgerIdentityRequest) GetTraceContext() *TraceContext {
	if m != nil {
		return m.TraceContext
	}
	return nil
}

type GetLedgerIdentityResponse struct {
	// The ID of the ledger exposed by the server.
	// Requests submitted with the wrong ledger ID will result in ``NOT_FOUND`` gRPC errors.
	// Required
	LedgerId             string   `protobuf:"bytes,1,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLedgerIdentityResponse) Reset()         { *m = GetLedgerIdentityResponse{} }
func (m *GetLedgerIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*GetLedgerIdentityResponse) ProtoMessage()    {}
func (*GetLedgerIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcfb95216f8da1e3, []int{1}
}

func (m *GetLedgerIdentityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLedgerIdentityResponse.Unmarshal(m, b)
}
func (m *GetLedgerIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLedgerIdentityResponse.Marshal(b, m, deterministic)
}
func (m *GetLedgerIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLedgerIdentityResponse.Merge(m, src)
}
func (m *GetLedgerIdentityResponse) XXX_Size() int {
	return xxx_messageInfo_GetLedgerIdentityResponse.Size(m)
}
func (m *GetLedgerIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLedgerIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLedgerIdentityResponse proto.InternalMessageInfo

func (m *GetLedgerIdentityResponse) GetLedgerId() string {
	if m != nil {
		return m.LedgerId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetLedgerIdentityRequest)(nil), "com.digitalasset.ledger.api.v1.GetLedgerIdentityRequest")
	proto.RegisterType((*GetLedgerIdentityResponse)(nil), "com.digitalasset.ledger.api.v1.GetLedgerIdentityResponse")
}

func init() {
	proto.RegisterFile("com/digitalasset/ledger/api/v1/ledger_identity_service.proto", fileDescriptor_fcfb95216f8da1e3)
}

var fileDescriptor_fcfb95216f8da1e3 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x49, 0xce, 0xcf, 0xd5,
	0x4f, 0xc9, 0x4c, 0xcf, 0x2c, 0x49, 0xcc, 0x49, 0x2c, 0x2e, 0x4e, 0x2d, 0xd1, 0xcf, 0x49, 0x4d,
	0x49, 0x4f, 0x2d, 0xd2, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0x84, 0xf2, 0xe2, 0x33, 0x53, 0x52,
	0xf3, 0x4a, 0x32, 0x4b, 0x2a, 0xe3, 0x8b, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0xf5, 0x0a, 0x8a,
	0xf2, 0x4b, 0xf2, 0x85, 0xe4, 0x92, 0xf3, 0x73, 0xf5, 0x90, 0x75, 0xeb, 0x41, 0xd4, 0xeb, 0x25,
	0x16, 0x64, 0xea, 0x95, 0x19, 0x4a, 0x19, 0x11, 0x30, 0xbd, 0xa4, 0x28, 0x31, 0x39, 0x35, 0x3e,
	0x39, 0x3f, 0xaf, 0x24, 0xb5, 0xa2, 0x04, 0x62, 0xa6, 0x52, 0x1e, 0x97, 0x84, 0x7b, 0x6a, 0x89,
	0x0f, 0x58, 0x9d, 0x27, 0xd4, 0xda, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xa1, 0x20, 0x2e,
	0x5e, 0x14, 0x2d, 0x12, 0x2f, 0xd8, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x74, 0xf4, 0xf0, 0x3b, 0x44,
	0x2f, 0x04, 0xa4, 0xcb, 0x19, 0xa2, 0x29, 0x88, 0xa7, 0x04, 0x89, 0xa7, 0x64, 0xc1, 0x25, 0x89,
	0xc5, 0xbe, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x69, 0x2e, 0x4e, 0x78, 0x08, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0xe4, 0x40, 0x95, 0x1a, 0x2d, 0x62, 0xe4, 0x12, 0x45, 0xd5,
	0x17, 0x0c, 0x09, 0x1d, 0xa1, 0x0e, 0x46, 0x2e, 0x41, 0x0c, 0x43, 0x85, 0x2c, 0x08, 0xb9, 0x12,
	0x97, 0xbf, 0xa5, 0x2c, 0xc9, 0xd0, 0x09, 0xf1, 0x81, 0x93, 0x23, 0x17, 0x81, 0x48, 0x72, 0x92,
	0xc7, 0xea, 0x07, 0xff, 0xd2, 0x92, 0xd4, 0x22, 0x67, 0x90, 0x86, 0x24, 0x36, 0x70, 0xc4, 0x18,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x97, 0x9e, 0xe3, 0x71, 0x2c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LedgerIdentityServiceClient is the client API for LedgerIdentityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LedgerIdentityServiceClient interface {
	// Clients may call this RPC to return the identifier of the ledger they are connected to.
	GetLedgerIdentity(ctx context.Context, in *GetLedgerIdentityRequest, opts ...grpc.CallOption) (*GetLedgerIdentityResponse, error)
}

type ledgerIdentityServiceClient struct {
	cc *grpc.ClientConn
}

func NewLedgerIdentityServiceClient(cc *grpc.ClientConn) LedgerIdentityServiceClient {
	return &ledgerIdentityServiceClient{cc}
}

func (c *ledgerIdentityServiceClient) GetLedgerIdentity(ctx context.Context, in *GetLedgerIdentityRequest, opts ...grpc.CallOption) (*GetLedgerIdentityResponse, error) {
	out := new(GetLedgerIdentityResponse)
	err := c.cc.Invoke(ctx, "/com.digitalasset.ledger.api.v1.LedgerIdentityService/GetLedgerIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LedgerIdentityServiceServer is the server API for LedgerIdentityService service.
type LedgerIdentityServiceServer interface {
	// Clients may call this RPC to return the identifier of the ledger they are connected to.
	GetLedgerIdentity(context.Context, *GetLedgerIdentityRequest) (*GetLedgerIdentityResponse, error)
}

// UnimplementedLedgerIdentityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLedgerIdentityServiceServer struct {
}

func (*UnimplementedLedgerIdentityServiceServer) GetLedgerIdentity(ctx context.Context, req *GetLedgerIdentityRequest) (*GetLedgerIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLedgerIdentity not implemented")
}

func RegisterLedgerIdentityServiceServer(s *grpc.Server, srv LedgerIdentityServiceServer) {
	s.RegisterService(&_LedgerIdentityService_serviceDesc, srv)
}

func _LedgerIdentityService_GetLedgerIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLedgerIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerIdentityServiceServer).GetLedgerIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.digitalasset.ledger.api.v1.LedgerIdentityService/GetLedgerIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerIdentityServiceServer).GetLedgerIdentity(ctx, req.(*GetLedgerIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LedgerIdentityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.digitalasset.ledger.api.v1.LedgerIdentityService",
	HandlerType: (*LedgerIdentityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLedgerIdentity",
			Handler:    _LedgerIdentityService_GetLedgerIdentity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "com/digitalasset/ledger/api/v1/ledger_identity_service.proto",
}
