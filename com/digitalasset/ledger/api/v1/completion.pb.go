// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/digitalasset/ledger/api/v1/completion.proto

package com_digitalasset_ledger_api_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A completion represents the status of a submitted command on the ledger: it can be successful or failed.
type Completion struct {
	// The ID of the succeeded or failed command.
	// Required
	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	// Identifies the exact type of the error.
	// For example, malformed or double spend transactions will result in a ``INVALID_ARGUMENT`` status.
	// Transactions with invalid time time windows (which may be valid at a later date) will result in an ``ABORTED`` error.
	// Optional
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The transaction_id of the transaction that resulted from the command with command_id.
	// Only set for successfully executed commands.
	// Optional
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// The trace context submitted with the command.
	// This field is a future extension point and is currently not supported.
	// Optional
	TraceContext         *TraceContext `protobuf:"bytes,1000,opt,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Completion) Reset()         { *m = Completion{} }
func (m *Completion) String() string { return proto.CompactTextString(m) }
func (*Completion) ProtoMessage()    {}
func (*Completion) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f4378f299c87a5d, []int{0}
}

func (m *Completion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Completion.Unmarshal(m, b)
}
func (m *Completion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Completion.Marshal(b, m, deterministic)
}
func (m *Completion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Completion.Merge(m, src)
}
func (m *Completion) XXX_Size() int {
	return xxx_messageInfo_Completion.Size(m)
}
func (m *Completion) XXX_DiscardUnknown() {
	xxx_messageInfo_Completion.DiscardUnknown(m)
}

var xxx_messageInfo_Completion proto.InternalMessageInfo

func (m *Completion) GetCommandId() string {
	if m != nil {
		return m.CommandId
	}
	return ""
}

func (m *Completion) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Completion) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Completion) GetTraceContext() *TraceContext {
	if m != nil {
		return m.TraceContext
	}
	return nil
}

func init() {
	proto.RegisterType((*Completion)(nil), "com.digitalasset.ledger.api.v1.Completion")
}

func init() {
	proto.RegisterFile("com/digitalasset/ledger/api/v1/completion.proto", fileDescriptor_6f4378f299c87a5d)
}

var fileDescriptor_6f4378f299c87a5d = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0x85, 0x4a, 0xa3, 0xf5, 0x10, 0x04, 0x4b, 0x41, 0x29, 0x82, 0x50, 0x44, 0x26,
	0xb4, 0x82, 0x0f, 0xd0, 0x3d, 0xf5, 0x24, 0xac, 0xde, 0xcb, 0x98, 0x84, 0x25, 0xb0, 0xbb, 0x13,
	0x92, 0x69, 0xf1, 0x39, 0x7d, 0x0a, 0x1f, 0x43, 0xb2, 0x29, 0xba, 0x5e, 0xec, 0x31, 0xf3, 0xcf,
	0xf7, 0x31, 0xf9, 0x85, 0xd2, 0xd4, 0x2a, 0xe3, 0x6a, 0xc7, 0xd8, 0x60, 0x8c, 0x96, 0x55, 0x63,
	0x4d, 0x6d, 0x83, 0x42, 0xef, 0xd4, 0x7e, 0x99, 0x62, 0xdf, 0x58, 0x76, 0xd4, 0x81, 0x0f, 0xc4,
	0x24, 0x6f, 0x35, 0xb5, 0x30, 0x04, 0x20, 0x03, 0x80, 0xde, 0xc1, 0x7e, 0x39, 0x5b, 0x1d, 0x11,
	0x72, 0x40, 0x6d, 0xb7, 0x9a, 0x3a, 0xb6, 0x1f, 0x9c, 0x9d, 0xb3, 0xeb, 0x9a, 0xa8, 0x6e, 0xac,
	0x0a, 0x5e, 0xab, 0xc8, 0xc8, 0xbb, 0x98, 0x83, 0xbb, 0xcf, 0x42, 0x88, 0xf2, 0xe7, 0x02, 0x79,
	0x23, 0x84, 0xa6, 0xb6, 0xc5, 0xce, 0x6c, 0x9d, 0x99, 0x16, 0xf3, 0x62, 0x31, 0xae, 0xc6, 0x87,
	0xc9, 0xc6, 0xc8, 0x07, 0x31, 0xca, 0xf4, 0xf4, 0x64, 0x5e, 0x2c, 0xce, 0x57, 0x12, 0xb2, 0x17,
	0x82, 0xd7, 0xf0, 0xda, 0x27, 0xd5, 0x61, 0x43, 0xde, 0x8b, 0x4b, 0x0e, 0xd8, 0x45, 0xd4, 0xc9,
	0x9c, 0x74, 0xa7, 0xbd, 0x6e, 0x32, 0x98, 0x6e, 0x8c, 0xac, 0xc4, 0xe4, 0xcf, 0xc1, 0xd3, 0xaf,
	0xb3, 0x5e, 0xfd, 0x08, 0xff, 0xd7, 0x00, 0x6f, 0x89, 0x2a, 0x33, 0x54, 0x5d, 0xf0, 0xe0, 0xb5,
	0x7e, 0x16, 0x47, 0x3a, 0x5c, 0x5f, 0xfd, 0xfe, 0xf9, 0x65, 0xc7, 0x36, 0x94, 0x69, 0xeb, 0x7d,
	0xd4, 0x77, 0xf2, 0xf4, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x3b, 0x29, 0x23, 0xb3, 0x01, 0x00,
	0x00,
}
