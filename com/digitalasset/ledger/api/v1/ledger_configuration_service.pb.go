// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/digitalasset/ledger/api/v1/ledger_configuration_service.proto

package com_digitalasset_ledger_api_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protobuf "google/protobuf"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLedgerConfigurationRequest struct {
	// Must correspond to the ledger ID reported by the Ledger Identification Service.
	// Required
	LedgerId string `protobuf:"bytes,1,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Server side tracing will be registered as a child of the submitted context.
	// This field is a future extension point and is currently not supported.
	// Optional
	TraceContext         *TraceContext `protobuf:"bytes,1000,opt,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetLedgerConfigurationRequest) Reset()         { *m = GetLedgerConfigurationRequest{} }
func (m *GetLedgerConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetLedgerConfigurationRequest) ProtoMessage()    {}
func (*GetLedgerConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f453113c7f9ceba, []int{0}
}

func (m *GetLedgerConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLedgerConfigurationRequest.Unmarshal(m, b)
}
func (m *GetLedgerConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLedgerConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *GetLedgerConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLedgerConfigurationRequest.Merge(m, src)
}
func (m *GetLedgerConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetLedgerConfigurationRequest.Size(m)
}
func (m *GetLedgerConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLedgerConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLedgerConfigurationRequest proto.InternalMessageInfo

func (m *GetLedgerConfigurationRequest) GetLedgerId() string {
	if m != nil {
		return m.LedgerId
	}
	return ""
}

func (m *GetLedgerConfigurationRequest) GetTraceContext() *TraceContext {
	if m != nil {
		return m.TraceContext
	}
	return nil
}

type GetLedgerConfigurationResponse struct {
	// The latest ledger configuration.
	LedgerConfiguration  *LedgerConfiguration `protobuf:"bytes,1,opt,name=ledger_configuration,json=ledgerConfiguration,proto3" json:"ledger_configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLedgerConfigurationResponse) Reset()         { *m = GetLedgerConfigurationResponse{} }
func (m *GetLedgerConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*GetLedgerConfigurationResponse) ProtoMessage()    {}
func (*GetLedgerConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f453113c7f9ceba, []int{1}
}

func (m *GetLedgerConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLedgerConfigurationResponse.Unmarshal(m, b)
}
func (m *GetLedgerConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLedgerConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *GetLedgerConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLedgerConfigurationResponse.Merge(m, src)
}
func (m *GetLedgerConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_GetLedgerConfigurationResponse.Size(m)
}
func (m *GetLedgerConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLedgerConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLedgerConfigurationResponse proto.InternalMessageInfo

func (m *GetLedgerConfigurationResponse) GetLedgerConfiguration() *LedgerConfiguration {
	if m != nil {
		return m.LedgerConfiguration
	}
	return nil
}

// LedgerConfiguration contains parameters of the ledger instance that may be useful to clients.
type LedgerConfiguration struct {
	// Minimum difference between ledger effective time and maximum record time in submitted commands.
	MinTtl *protobuf.Duration `protobuf:"bytes,1,opt,name=min_ttl,json=minTtl,proto3" json:"min_ttl,omitempty"`
	// Maximum difference between ledger effective time and maximum record time in submitted commands.
	MaxTtl               *protobuf.Duration `protobuf:"bytes,2,opt,name=max_ttl,json=maxTtl,proto3" json:"max_ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LedgerConfiguration) Reset()         { *m = LedgerConfiguration{} }
func (m *LedgerConfiguration) String() string { return proto.CompactTextString(m) }
func (*LedgerConfiguration) ProtoMessage()    {}
func (*LedgerConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f453113c7f9ceba, []int{2}
}

func (m *LedgerConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerConfiguration.Unmarshal(m, b)
}
func (m *LedgerConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerConfiguration.Marshal(b, m, deterministic)
}
func (m *LedgerConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerConfiguration.Merge(m, src)
}
func (m *LedgerConfiguration) XXX_Size() int {
	return xxx_messageInfo_LedgerConfiguration.Size(m)
}
func (m *LedgerConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerConfiguration proto.InternalMessageInfo

func (m *LedgerConfiguration) GetMinTtl() *protobuf.Duration {
	if m != nil {
		return m.MinTtl
	}
	return nil
}

func (m *LedgerConfiguration) GetMaxTtl() *protobuf.Duration {
	if m != nil {
		return m.MaxTtl
	}
	return nil
}

func init() {
	proto.RegisterType((*GetLedgerConfigurationRequest)(nil), "com.digitalasset.ledger.api.v1.GetLedgerConfigurationRequest")
	proto.RegisterType((*GetLedgerConfigurationResponse)(nil), "com.digitalasset.ledger.api.v1.GetLedgerConfigurationResponse")
	proto.RegisterType((*LedgerConfiguration)(nil), "com.digitalasset.ledger.api.v1.LedgerConfiguration")
}

func init() {
	proto.RegisterFile("com/digitalasset/ledger/api/v1/ledger_configuration_service.proto", fileDescriptor_0f453113c7f9ceba)
}

var fileDescriptor_0f453113c7f9ceba = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x99, 0x7f, 0xd1, 0xfe, 0x9d, 0xea, 0x66, 0x2a, 0x52, 0x23, 0x96, 0x52, 0x5c, 0x74,
	0x21, 0x13, 0x9b, 0xae, 0x15, 0x6c, 0x45, 0x11, 0x04, 0x21, 0x76, 0x5f, 0xa6, 0xc9, 0x6d, 0x18,
	0x98, 0x64, 0x62, 0x72, 0x53, 0xba, 0x71, 0xef, 0xd2, 0xad, 0x6f, 0xe2, 0x23, 0xf9, 0x18, 0xd2,
	0x4c, 0x0a, 0x11, 0xd3, 0x06, 0x5c, 0xde, 0x49, 0xbe, 0x73, 0xce, 0x9c, 0xb9, 0xf4, 0xc6, 0xd3,
	0xa1, 0xed, 0xcb, 0x40, 0xa2, 0x50, 0x22, 0x4d, 0x01, 0x6d, 0x05, 0x7e, 0x00, 0x89, 0x2d, 0x62,
	0x69, 0xaf, 0x46, 0xc5, 0x34, 0xf7, 0x74, 0xb4, 0x94, 0x41, 0x96, 0x08, 0x94, 0x3a, 0x9a, 0xa7,
	0x90, 0xac, 0xa4, 0x07, 0x3c, 0x4e, 0x34, 0x6a, 0xd6, 0xf3, 0x74, 0xc8, 0xcb, 0x12, 0xdc, 0x40,
	0x5c, 0xc4, 0x92, 0xaf, 0x46, 0x96, 0x53, 0x63, 0x81, 0x89, 0xf0, 0x60, 0xe3, 0x80, 0xb0, 0x46,
	0xa3, 0x69, 0xf5, 0x02, 0xad, 0x03, 0x05, 0x76, 0x3e, 0x2d, 0xb2, 0xa5, 0xed, 0x17, 0xde, 0xe6,
	0xfb, 0xe0, 0x9d, 0xd0, 0xb3, 0x7b, 0xc0, 0xc7, 0x5c, 0x68, 0x5a, 0x0e, 0xe7, 0xc2, 0x4b, 0x06,
	0x29, 0xb2, 0x53, 0xda, 0x2a, 0xb2, 0x4b, 0xbf, 0x4b, 0xfa, 0x64, 0xd8, 0x72, 0xff, 0x9b, 0x83,
	0x07, 0x9f, 0xb9, 0xf4, 0xf0, 0x87, 0x6b, 0xf7, 0xab, 0xd9, 0x27, 0xc3, 0xb6, 0x73, 0xc1, 0xf7,
	0xdf, 0x85, 0xcf, 0x36, 0xd4, 0xd4, 0x40, 0xee, 0x01, 0x96, 0xa6, 0xc1, 0x1b, 0xa1, 0xbd, 0x5d,
	0x91, 0xd2, 0x58, 0x47, 0x29, 0xb0, 0x25, 0x3d, 0xaa, 0xea, 0x33, 0x8f, 0xd7, 0x76, 0xc6, 0x75,
	0xe6, 0x55, 0xd2, 0x1d, 0xf5, 0xfb, 0x70, 0xf0, 0x4a, 0x3b, 0x15, 0xff, 0x32, 0x87, 0x36, 0x43,
	0x19, 0xcd, 0x11, 0x55, 0xe1, 0x78, 0xc2, 0x4d, 0xcd, 0x7c, 0x5b, 0x33, 0xbf, 0xdd, 0xea, 0x36,
	0x42, 0x19, 0xcd, 0x50, 0xe5, 0x8c, 0x58, 0xe7, 0xcc, 0xbf, 0x7a, 0x46, 0xac, 0x67, 0xa8, 0x9c,
	0x4f, 0x42, 0xad, 0x0a, 0xff, 0x67, 0xb3, 0x35, 0xec, 0x83, 0xd0, 0xe3, 0xea, 0xa2, 0xd8, 0x55,
	0x5d, 0x05, 0x7b, 0xdf, 0xdc, 0xba, 0xfe, 0x2b, 0x6e, 0xde, 0xe7, 0x92, 0x4c, 0xee, 0x68, 0xcd,
	0x36, 0x4f, 0xce, 0x77, 0xdf, 0xec, 0x29, 0x43, 0x48, 0xa6, 0x1b, 0x6a, 0xd1, 0xc8, 0xdb, 0x19,
	0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x8c, 0x5e, 0xa2, 0x5f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LedgerConfigurationServiceClient is the client API for LedgerConfigurationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LedgerConfigurationServiceClient interface {
	// Returns the latest configuration as the first response, and publishes configuration updates in the same stream.
	GetLedgerConfiguration(ctx context.Context, in *GetLedgerConfigurationRequest, opts ...grpc.CallOption) (LedgerConfigurationService_GetLedgerConfigurationClient, error)
}

type ledgerConfigurationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLedgerConfigurationServiceClient(cc *grpc.ClientConn) LedgerConfigurationServiceClient {
	return &ledgerConfigurationServiceClient{cc}
}

func (c *ledgerConfigurationServiceClient) GetLedgerConfiguration(ctx context.Context, in *GetLedgerConfigurationRequest, opts ...grpc.CallOption) (LedgerConfigurationService_GetLedgerConfigurationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LedgerConfigurationService_serviceDesc.Streams[0], "/com.digitalasset.ledger.api.v1.LedgerConfigurationService/GetLedgerConfiguration", opts...)
	if err != nil {
		return nil, err
	}
	x := &ledgerConfigurationServiceGetLedgerConfigurationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LedgerConfigurationService_GetLedgerConfigurationClient interface {
	Recv() (*GetLedgerConfigurationResponse, error)
	grpc.ClientStream
}

type ledgerConfigurationServiceGetLedgerConfigurationClient struct {
	grpc.ClientStream
}

func (x *ledgerConfigurationServiceGetLedgerConfigurationClient) Recv() (*GetLedgerConfigurationResponse, error) {
	m := new(GetLedgerConfigurationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LedgerConfigurationServiceServer is the server API for LedgerConfigurationService service.
type LedgerConfigurationServiceServer interface {
	// Returns the latest configuration as the first response, and publishes configuration updates in the same stream.
	GetLedgerConfiguration(*GetLedgerConfigurationRequest, LedgerConfigurationService_GetLedgerConfigurationServer) error
}

// UnimplementedLedgerConfigurationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLedgerConfigurationServiceServer struct {
}

func (*UnimplementedLedgerConfigurationServiceServer) GetLedgerConfiguration(req *GetLedgerConfigurationRequest, srv LedgerConfigurationService_GetLedgerConfigurationServer) error {
	return status.Errorf(codes.Unimplemented, "method GetLedgerConfiguration not implemented")
}

func RegisterLedgerConfigurationServiceServer(s *grpc.Server, srv LedgerConfigurationServiceServer) {
	s.RegisterService(&_LedgerConfigurationService_serviceDesc, srv)
}

func _LedgerConfigurationService_GetLedgerConfiguration_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLedgerConfigurationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LedgerConfigurationServiceServer).GetLedgerConfiguration(m, &ledgerConfigurationServiceGetLedgerConfigurationServer{stream})
}

type LedgerConfigurationService_GetLedgerConfigurationServer interface {
	Send(*GetLedgerConfigurationResponse) error
	grpc.ServerStream
}

type ledgerConfigurationServiceGetLedgerConfigurationServer struct {
	grpc.ServerStream
}

func (x *ledgerConfigurationServiceGetLedgerConfigurationServer) Send(m *GetLedgerConfigurationResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _LedgerConfigurationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.digitalasset.ledger.api.v1.LedgerConfigurationService",
	HandlerType: (*LedgerConfigurationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetLedgerConfiguration",
			Handler:       _LedgerConfigurationService_GetLedgerConfiguration_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "com/digitalasset/ledger/api/v1/ledger_configuration_service.proto",
}
